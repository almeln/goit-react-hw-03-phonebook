{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/ContactItem/ContactItem.module.css","components/Container/Container.module.css","components/Filter/Filter.module.css","components/ContactForm/ContactForm.js","components/ContactItem/ContactItem.js","components/ContactList/ContactList.js","components/Container/Container.js","components/Filter/Filter.js","components/App.jsx","index.js"],"names":["module","exports","ContactForm","state","name","number","handleInputChange","event","currentTarget","value","console","log","setState","handleSubmit","preventDefault","props","onSubmit","reset","this","className","css","form","formInputLabel","formInput","type","onChange","pattern","title","required","formInputBtn","Component","ContactItem","onDelete","contactItemName","contactItemNumber","deleteBtn","onClick","ContactList","contacts","onDeleteContact","map","id","contactItem","Container","children","container","Filter","filterInput","App","filter","formSubmitHandler","data","contact","uuidv4","find","toLowerCase","alert","changeFilter","getVisibleContacts","normalizedFilter","includes","deleteContact","contactId","prevState","localStorage","getItem","parsedContacts","JSON","parse","prevProps","setItem","stringify","visibleContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.33fd7655.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__11XAy\",\"formInput\":\"ContactForm_formInput__2vCL6\",\"formInputLabel\":\"ContactForm_formInputLabel__2ZT-v\",\"formInputBtn\":\"ContactForm_formInputBtn__2D-d4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactItemName\":\"ContactItem_contactItemName__3N8Wu\",\"contactItemNumber\":\"ContactItem_contactItemNumber__3BlRw\",\"deleteBtn\":\"ContactItem_deleteBtn__2fPXV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__2Pu5I\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterInput\":\"Filter_filterInput__3ecy4\"};","import React, { Component } from 'react';\nimport css from './ContactForm.module.css';\n\nclass ContactForm extends Component {\n  state = {\n    name: '',\n    number: '',\n  };\n\n  handleInputChange = event => {\n    const { name, value } = event.currentTarget;\n    console.log(value);\n    console.log(name);\n    // this.setState({ name: event.currentTarget.value })\n    // Вычисляемые свойства\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  handleSubmit = event => {\n    const { state } = this;\n\n    event.preventDefault();\n    console.log(state);\n    this.props.onSubmit(state);\n    this.reset();\n  };\n\n  reset = () => {\n    this.setState({\n      name: '',\n      number: '',\n    });\n  };\n\n  render() {\n    const { handleSubmit, handleInputChange } = this;\n\n    return (\n      <form className={css.form} onSubmit={handleSubmit}>\n        <label className={css.formInputLabel}>\n          Name\n          <input\n            className={css.formInput}\n            type=\"text\"\n            name=\"name\"\n            value={this.state.name}\n            onChange={handleInputChange}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n          />\n        </label>\n        <label className={css.formInputLabel}>\n          Number\n          <input\n            className={css.formInput}\n            type=\"tel\"\n            name=\"number\"\n            value={this.state.number}\n            onChange={handleInputChange}\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n          />\n        </label>\n        <button className={css.formInputBtn} type=\"submit\">\n          Add contact\n        </button>\n      </form>\n    );\n  }\n}\n\nexport default ContactForm;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport css from './ContactItem.module.css';\n\nconst ContactItem = ({ name, number, onDelete }) => (\n  <>\n    <p>\n      <span className={css.contactItemName}>{name}:</span>\n      <span className={css.contactItemNumber}>{number}</span>\n      <button type=\"button\" className={css.deleteBtn} onClick={onDelete}>\n        Delete\n      </button>\n    </p>\n  </>\n);\n\nContactItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  onDelete: PropTypes.func.isRequired,\n};\n\nexport default ContactItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport css from './ContactList.module.css';\n\nimport ContactItem from 'components/ContactItem';\n\nconst ContactList = ({ contacts, onDeleteContact }) => (\n  <ul>\n    {contacts.map(({ id, name, number }) => (\n      <li key={id} className={css.contactItem}>\n        <ContactItem\n          name={name}\n          number={number}\n          onDelete={() => onDeleteContact(id)}\n        />\n      </li>\n    ))}\n  </ul>\n);\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string,\n    }),\n  ).isRequired,\n  onDeleteContact: PropTypes.func,\n};\n\nexport default ContactList;\n","import React from 'react';\nimport css from './Container.module.css';\n\nconst Container = ({ children }) => (\n  <div className={css.container}>{children}</div>\n);\n\nexport default Container;\n","import React from 'react';\nimport css from './Filter.module.css';\nimport PropTypes from 'prop-types';\n\nconst Filter = ({ value, onChange }) => (\n  <label>\n    Find contacts by name\n    <input\n      className={css.filterInput}\n      type=\"text\"\n      value={value}\n      onChange={onChange}\n    />\n  </label>\n);\n\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default Filter;\n","import React, { Component } from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport ContactForm from './ContactForm';\r\nimport ContactList from './ContactList';\r\nimport Container from './Container';\r\nimport Filter from './Filter';\r\n\r\nclass App extends Component {\r\n    state = {\r\n        contacts: [\r\n            {id: 'id-1', name: 'Rosie Simpson', number: '459-12-56'},\r\n            {id: 'id-2', name: 'Hermione Kline', number: '443-89-12'},\r\n            {id: 'id-3', name: 'Eden Clements', number: '645-17-79'},\r\n            {id: 'id-4', name: 'Annie Copeland', number: '227-91-26'},\r\n        ],\r\n        filter: ''\r\n    }\r\n\r\n    // Фазы жизненного цикла\r\n    componentDidMount() {\r\n        console.log('App componentDidMount');\r\n\r\n        const contacts = localStorage.getItem('contacts');\r\n        const parsedContacts = JSON.parse(contacts);\r\n\r\n        if (parsedContacts) {\r\n            console.log(parsedContacts);\r\n            this.setState({ contacts: parsedContacts });\r\n        };\r\n    };\r\n\r\n    // Фазы жизненного цикла\r\n    componentDidUpdate(prevProps, prevState) {\r\n        const { contacts } = this.state;\r\n\r\n        console.log('App componentDidUpdate');\r\n        // До обновления\r\n        console.log('prevState', prevState);\r\n        // После обновления\r\n        console.log('state', this.state);\r\n\r\n        if (contacts !== prevState.contacts) {\r\n            console.log('Обновилось поле контактов, записываю контакты в хранилище');\r\n\r\n            localStorage.setItem('contacts', JSON.stringify(contacts));\r\n        };\r\n    }\r\n\r\n    formSubmitHandler = data => {\r\n        console.log(data);\r\n\r\n        // Добавление контакта\r\n        const contact = {\r\n            id: uuidv4(),\r\n            name: data.name,\r\n            number: data.number,\r\n        };\r\n\r\n        // Проверка на дублирование имени\r\n        const doubleContact = this.state.contacts.find(contact => contact.name.toLowerCase() === data.name.toLowerCase());\r\n        \r\n        if (doubleContact) {\r\n            alert(`${data.name} is alredy in contacts.`);\r\n            return;\r\n        };\r\n\r\n        // this.setState(prevState => ({\r\n        //     contacts: [contact, ...prevState.contacts]\r\n        // }));\r\n\r\n        // Деструктуризация\r\n        this.setState(({ contacts }) => ({\r\n            contacts: [contact, ...contacts]\r\n        }));\r\n    };\r\n\r\n    changeFilter = event => {\r\n        this.setState({filter: event.currentTarget.value});\r\n    };\r\n\r\n    getVisibleContacts = () => {\r\n        const { filter, contacts } = this.state;\r\n\r\n        const normalizedFilter = filter.toLowerCase();\r\n        return contacts.filter(contact =>\r\n            contact.name.toLowerCase().includes(normalizedFilter),\r\n        );\r\n    };\r\n\r\n    deleteContact = contactId => {\r\n        this.setState(prevState => ({\r\n            contacts: prevState.contacts.filter(contact => contact.id !== contactId)\r\n        }));\r\n    };\r\n\r\n    render() {\r\n        const { formSubmitHandler, changeFilter, deleteContact, getVisibleContacts } = this;\r\n        const visibleContacts = getVisibleContacts();\r\n\r\n        // Фазы жизненного цикла\r\n        console.log('App render');\r\n\r\n        return (\r\n            <Container>\r\n            <h1>Phonebook</h1>\r\n            <ContactForm onSubmit={formSubmitHandler}></ContactForm>\r\n            <h2>Contacts</h2>\r\n            <Filter value={this.state.filter} onChange={changeFilter}></Filter>\r\n            <ContactList \r\n            contacts={visibleContacts}\r\n            onDeleteContact={deleteContact}\r\n            ></ContactList>\r\n            </Container>\r\n        )\r\n    }\r\n};\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n// import reportWebVitals from './reportWebVitals';\nimport 'modern-normalize/modern-normalize.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// // If you want to start measuring performance in your app, pass a function\n// // to log results (for example: reportWebVitals(console.log))\n// // or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}